!(function (t, e) { typeof exports === "object" && typeof module !== "undefined" ? module.exports = e() : typeof define === "function" && define.amd ? define(e) : t.ES6Promise = e(); }(this, () => {
  function t(t) { const e = typeof t; return t !== null && (e === "object" || e === "function"); } function e(t) { return typeof t === "function"; } function n(t) { W = t; } function r(t) { z = t; } function o() { return function () { return process.nextTick(a); }; } function i() { return typeof U !== "undefined" ? function () { U(a); } : c(); } function s() { let t = 0; const e = new H(a); const n = document.createTextNode(""); return e.observe(n, { characterData: !0 }), function () { n.data = t = ++t % 2; }; } function u() { const t = new MessageChannel(); return t.port1.onmessage = a, function () { return t.port2.postMessage(0); }; } function c() { const t = setTimeout; return function () { return t(a, 1); }; } function a() { for (let t = 0; t < N; t += 2) { const e = Q[t]; const n = Q[t + 1]; e(n), Q[t] = void 0, Q[t + 1] = void 0; }N = 0; } function f() { try { const t = Function("return this")().require("vertx"); return U = t.runOnLoop || t.runOnContext, i(); } catch (e) { return c(); } } function l(t, e) { const n = this; const r = new this.constructor(p); void 0 === r[V] && x(r); const o = n._state; if (o) { const i = arguments[o - 1]; z(() => T(o, r, i, n._result)); } else j(n, r, t, e); return r; } function h(t) { const e = this; if (t && typeof t === "object" && t.constructor === e) return t; const n = new e(p); return w(n, t), n; } function p() {} function v() { return new TypeError("You cannot resolve a promise with itself"); } function d() { return new TypeError("A promises callback cannot return that same promise."); } function _(t, e, n, r) { try { t.call(e, n, r); } catch (o) { return o; } } function y(t, e, n) { z((t) => { let r = !1; const o = _(n, e, (n) => { r || (r = !0, e !== n ? w(t, n) : A(t, n)); }, (e) => { r || (r = !0, S(t, e)); }, `Settle: ${t._label || " unknown promise"}`); !r && o && (r = !0, S(t, o)); }, t); } function m(t, e) { e._state === Z ? A(t, e._result) : e._state === $ ? S(t, e._result) : j(e, void 0, e => w(t, e), e => S(t, e)); } function b(t, n, r) { n.constructor === t.constructor && r === l && n.constructor.resolve === h ? m(t, n) : void 0 === r ? A(t, n) : e(r) ? y(t, n, r) : A(t, n); } function w(e, n) { if (e === n)S(e, v()); else if (t(n)) { let r = void 0; try { r = n.then; } catch (o) { return void S(e, o); }b(e, n, r); } else A(e, n); } function g(t) { t._onerror && t._onerror(t._result), E(t); } function A(t, e) { t._state === X && (t._result = e, t._state = Z, t._subscribers.length !== 0 && z(E, t)); } function S(t, e) { t._state === X && (t._state = $, t._result = e, z(g, t)); } function j(t, e, n, r) { const o = t._subscribers; const i = o.length; t._onerror = null, o[i] = e, o[i + Z] = n, o[i + $] = r, i === 0 && t._state && z(E, t); } function E(t) { const e = t._subscribers; const n = t._state; if (e.length !== 0) { for (let r = void 0, o = void 0, i = t._result, s = 0; s < e.length; s += 3)r = e[s], o = e[s + n], r ? T(n, r, o, i) : o(i); t._subscribers.length = 0; } } function T(t, n, r, o) { const i = e(r); let s = void 0; let u = void 0; let c = !0; if (i) { try { s = r(o); } catch (a) { c = !1, u = a; } if (n === s) return void S(n, d()); } else s = o; n._state !== X || (i && c ? w(n, s) : c === !1 ? S(n, u) : t === Z ? A(n, s) : t === $ && S(n, s)); } function M(t, e) { try { e((e) => { w(t, e); }, (e) => { S(t, e); }); } catch (n) { S(t, n); } } function P() { return tt++; } function x(t) { t[V] = tt++, t._state = void 0, t._result = void 0, t._subscribers = []; } function C() { return new Error("Array Methods must be provided an Array"); } function O(t) { return new et(this, t).promise; } function k(t) { const e = this; return new e(L(t) ? (n, r) => { for (let o = t.length, i = 0; i < o; i++)e.resolve(t[i]).then(n, r); } : (t, e) => e(new TypeError("You must pass an array to race."))); } function F(t) { const e = this; const n = new e(p); return S(n, t), n; } function Y() { throw new TypeError("You must pass a resolver function as the first argument to the promise constructor"); } function q() { throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."); } function D() { let t = void 0; if (typeof global !== "undefined")t = global; else if (typeof self !== "undefined")t = self; else try { t = Function("return this")(); } catch (e) { throw new Error("polyfill failed because global object is unavailable in this environment"); } const n = t.Promise; if (n) { let r = null; try { r = Object.prototype.toString.call(n.resolve()); } catch (e) {} if (r === "[object Promise]" && !n.cast) return; }t.Promise = nt; } let K = void 0; K = Array.isArray ? Array.isArray : function (t) { return Object.prototype.toString.call(t) === "[object Array]"; }; var L = K; var N = 0; var U = void 0; var W = void 0; var z = function (t, e) { Q[N] = t, Q[N + 1] = e, N += 2, N === 2 && (W ? W(a) : R()); }; const B = typeof window !== "undefined" ? window : void 0; const G = B || {}; var H = G.MutationObserver || G.WebKitMutationObserver; const I = typeof self === "undefined" && typeof process !== "undefined" && {}.toString.call(process) === "[object process]"; const J = typeof Uint8ClampedArray !== "undefined" && typeof importScripts !== "undefined" && typeof MessageChannel !== "undefined"; var Q = new Array(1e3); var R = void 0; R = I ? o() : H ? s() : J ? u() : void 0 === B && typeof require === "function" ? f() : c(); var V = Math.random().toString(36).substring(2); var X = void 0; var Z = 1; var $ = 2; var tt = 0; var et = (function () { function t(t, e) { this._instanceConstructor = t, this.promise = new t(p), this.promise[V] || x(this.promise), L(e) ? (this.length = e.length, this._remaining = e.length, this._result = new Array(this.length), this.length === 0 ? A(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(e), this._remaining === 0 && A(this.promise, this._result))) : S(this.promise, C()); } return t.prototype._enumerate = function (t) { for (let e = 0; this._state === X && e < t.length; e++) this._eachEntry(t[e], e); }, t.prototype._eachEntry = function (t, e) { const n = this._instanceConstructor; const r = n.resolve; if (r === h) { let o = void 0; let i = void 0; let s = !1; try { o = t.then; } catch (u) { s = !0, i = u; } if (o === l && t._state !== X) this._settledAt(t._state, e, t._result); else if (typeof o !== "function") this._remaining--, this._result[e] = t; else if (n === nt) { const c = new n(p); s ? S(c, i) : b(c, t, o), this._willSettleAt(c, e); } else this._willSettleAt(new n((e => e(t))), e); } else this._willSettleAt(r(t), e); }, t.prototype._settledAt = function (t, e, n) { const r = this.promise; r._state === X && (this._remaining--, t === $ ? S(r, n) : this._result[e] = n), this._remaining === 0 && A(r, this._result); }, t.prototype._willSettleAt = function (t, e) { const n = this; j(t, void 0, t => n._settledAt(Z, e, t), t => n._settledAt($, e, t)); }, t; }()); var nt = (function () { function t(e) { this[V] = P(), this._result = this._state = void 0, this._subscribers = [], p !== e && (typeof e !== "function" && Y(), this instanceof t ? M(this, e) : q()); } return t.prototype.catch = function (t) { return this.then(null, t); }, t.prototype.finally = function (t) { const n = this; const r = n.constructor; return e(t) ? n.then(e => r.resolve(t()).then(() => e), e => r.resolve(t()).then(() => { throw e; })) : n.then(t, t); }, t; }()); return nt.prototype.then = l, nt.all = O, nt.race = k, nt.resolve = h, nt.reject = F, nt._setScheduler = n, nt._setAsap = r, nt._asap = z, nt.polyfill = D, nt.Promise = nt, nt.polyfill(), nt;
}));
String.prototype.padEnd || (String.prototype.padEnd = function (t, n) { return t >>= 0, n = String(void 0 !== n ? n : ""), this.length > t ? String(this) : ((t -= this.length) > n.length && (n += n.repeat(t / n.length)), String(this) + n.slice(0, t)); });
